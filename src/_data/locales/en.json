{
  "audience_authors": "Book Authors",
  "audience_designers": "For Designers",
  "audience_developers": "For Developers",
  "feature_debugging": "Browser-Based Debugging",
  "feature_debugging_desc": "Use familiar developer tools for debugging and performance evaluation.",
  "feature_instant_epub": "Valid EPUB",
  "feature_instant_epub_desc": "Generate valid EPUB 3.2 files instantly with proper structure and metadata for accessibility.",
  "feature_live_preview": "Live Layout Preview",
  "feature_live_preview_desc": "See real-time layout changes across different device screens and orientations.",
  "feature_no_install": "No Installation",
  "feature_no_install_desc": "Browser-based tool that works offline as well. No software to install.",
  "feature_plain_text": "Plain Text Input",
  "feature_plain_text_desc": "Write your content in simple plain text format. No complex markup required.",
  "feature_rapid_iteration": "Rapid Iteration",
  "feature_rapid_iteration_desc": "Avoid device round trips when testing responsive and interactive behaviours.",
  "feature_responsive_design": "Responsive Design",
  "feature_responsive_design_desc": "Test typography, margins, and layouts on mobile, tablet, and desktop screen sizes instantly.",
  "feature_third_party": "Integrated Scripting",
  "feature_third_party_desc": "Add extension libraries, custom build-time scripts and Reading System scripts.",
  "feature_visual_feedback": "Visual Design Feedback",
  "feature_visual_feedback_desc": "Immediate visual feedback for cover design, chapter breaks, and formatting choices.",
  "hero_description": "The Simplest way to create Semantic, Scripted EPUB books",
  "iframe_title": "EDITME.html - EPUB Creation Tool",
  "page_title": "EDITME.html",
  "choose_role_legend": "Choose your role to see relevant features",
  "current": "current",
  "feature_details_heading": "Feature Details",
  "interactive_epub_tool_heading": "Interactive EPUB Creation Tool",
  "show_all_samples": "Show All",
  "show_current_samples": "Show Selection",
  "language_selection": "Language selection",
  "meta_description": "Convert plain text to EPUB - the simplest way to create EPUB files",
  "open_tool_new_window": "Open EPUB tool in new window",
  "opens_new_tab": "opens in new tab",
  "skip_to_main": "Skip to main content",
  "version": "version",
  "view_features_for": "View features for",
  "audience_writers": "For Writers",
  "sample_advanced_metadata_desc": "Complex metadata and structure examples",
  "sample_files_heading": "These samples will open in the app below",
  "sample_interactive_features_desc": "JavaScript and interactive element examples",
  "sample_poetry_collection_desc": "Poetry and verse formatting examples",
  "sample_responsive_layout_desc": "Multi-device layout and responsive design examples",
  "sample_simple_novel_desc": "Basic fiction formatting example",
  "sample_typography_showcase_desc": "Advanced typography and styling examples",
  "subtitle_scripted": "Scripted EPUB Editor",
  "subtitle_simple": "Simple EPUB Editor",
  "subtitle_structured": "Scripted EPUB Editor",
  "subtitle_semantic": "Semantic EPUB Editor",
  "download_seed_button": "Download SEED.html",
  "license_heading": "Freeware License",
  "questions_button": "Questions?",
  "breadcrumb_home": "SEED.html",
  "breadcrumb_questions": "Questions",
  "qa_why_app_q": "Why does this app exist?",
  "qa_why_app_a": "I wrote it for myself. I imagined an environment for experimenting with **scripted content** in EPUB. The EPUB 3 format is mature and well supported, but the tooling for authoring EPUB treats it as a *destination format* - equivalent to a PDF or other proprietary book formats - at the end of a lowest common denominator content pipeline.\n\nThe current EPUB Reading Systems (like Apple's Books app, and Cantook by Aldiko) support web-like rich content because they're based on web browser software. I want to explore the possibilities but none of the existing software that produces EPUB files supports the kind of development experience I expect when working with the web stack.\n\nI want to see **content/style/layout/behaviour changes immediately** when I make a change. This app does that and meets my needs already.",
  "qa_browsers_q": "Supported Browsers",
  "qa_browsers_a": "The SEED.html app should run as designed on recent **Safari**, **Chrome**, **Edge** and **Firefox** browsers. Other Chromium-based browsers should also work.\n\nThe app will work in these browsers on **iOS/iPadOS/macOS**, **Linux**, **Windows** and **Android**.\n\nThe app is available at [stewarthaines.com/epub](https://stewarthaines.com/epub) and can also be downloaded and run from the local filesystem, whether on a computer or a mobile device.",
  "qa_where_files_q": "Where are my files?",
  "qa_where_files_a": "The SEED.html app runs in your web browser, and uses browser-managed local storage to store your files. **Nothing is sent to a server.**\n\nThe particular way the files are stored means you are not able to find them on your local file system - they're only available through the browser app.\n\nThe *'Package EPUB'* button creates a file and downloads it to wherever your browser normally downloads files. Everything is stored in the EPUB, so this is where your files are ultimately. The plain text source content and scripts are stored in a manifest item called `SOURCE.zip`.\n\n**Technical answer:** They're in either the browser's Origin Private File System or in an IndexedDB store, depending on which browser and whether the app was loaded over `http:` or from a `file:` url.",
  "qa_validation_q": "EPUB Validation",
  "qa_validation_a": "It's **important** that the packaged epub file passes validation. The SEED.html app can't guarantee that the content will be valid.\n\nEven a small typo in a css file can cause validation to fail, though the EPUB might still be readable when side-loaded or imported to a device.\n\nI use the [pagina EPUB-Checker](https://pagina.gmbh/startseite/leistungen/publishing-softwareloesungen/epub-checker/) for validation.",
  "qa_reading_apps_q": "EPUB Reading apps",
  "qa_reading_apps_a": "In **2025** I've found good support for EPUB 3 with interactive content in these applications:\n\n- [Books app](https://www.apple.com/apple-books/) on iOS/iPadOS/macOS\n- [Cantook by Aldiko](https://pro.cantook.com/en/l-application-cantook) on Android/iOS\n- [Reasily](https://reasily.blogspot.com/) on Android\n- [Thorium Reader](https://thorium.edrlab.org/) by EDRLab on macOS/Windows/Linux\n- [BookFusion](https://www.bookfusion.com/) on iOS/Android\n\nI expect that there are others I don't know about yet.",
  "qa_freeware_q": "Why a freeware license?",
  "qa_freeware_a": "I want you to be able to use it as much as you like for **personal, non-commercial projects** for no cost to you. You can share it with others under the same conditions.\n\nIt's *not open source* at this time.\n\nIf you like using it and want to _donate_ to support the continuing development that would be great! I have a LiberaPay account here in my name: <script src='https://liberapay.com/stewarthaines/widgets/button.js'></script> <noscript><a href='https://liberapay.com/stewarthaines/donate'><img alt='Donate using Liberapay' src='https://liberapay.com/assets/widgets/donate.svg'></a></noscript>",
  "qa_opensource_q": "Why not open source?",
  "qa_opensource_a": "1. I have **no experience** running an open source project\n2. I have **no enthusiasm** for running an open source project\n3. I expect if the software finds a user community they will largely *not be software people* and won't care about it being not open source\n4. The project was largely generated with an LLM and I don't know all the consequences of that yet",
  "qa_commercial_q": "How do I obtain a commercial license?",
  "qa_commercial_a": "1. Donate some money via **LiberaPay**<script src='https://liberapay.com/stewarthaines/widgets/button.js'></script> <noscript><a href='https://liberapay.com/stewarthaines/donate'><img alt='Donate using Liberapay' src='https://liberapay.com/assets/widgets/donate.svg'></a></noscript>\n2. Send me an email with the invoice number so I can cross-reference: [Email Stewart](mailto:stewarthaines+seed@gmail.com?subject=SEED.html%20Commercial%20License)\n3. Receive an email from me approving your requested commercial use of the software",
  "qa_ai_q": "What about AI?",
  "qa_ai_a": "The SEED.html app was developed in **July and August of 2025** with extensive use of [Anthropic's Claude Code](https://claude.ai/code) product, mostly using the Sonnet 3.7 and 4 models.\n\nClaude Code is an LLM-powered coding assistant with command-line interface capabilities. The agent wrote **100% of the code and tests** for this project in a javascript framework called **Svelte 5**, which I had no prior experience with.\n\nI've been writing software for 30 years. This has changed the game.",
  "qa_accessibility_q": "What about Accessibility?",
  "qa_accessibility_a": "The app is usable **without a mouse** (via keyboard navigation) and should support screen reader software.\n\nI'm sure it could be better.\n\nIf you have something constructive to tell me please get in touch <a href='#on-mastodon'>on mastodon</a>.",
  "qa_markdown_textile_q": "Markdown or Textile?",
  "qa_markdown_textile_a": "The main reason for using [Markdown](https://daringfireball.net/projects/markdown/) formatting is its support in other writing tools. If you have existing workflows or preferences I'd suggest sticking with one of the Markdown libraries from the sample EPUBs.\n\nI use [Obsidian app](https://obsidian.md/) heavily and am very comfortable with Markdown in this environment.\n\nFor EPUB authoring I lean towards [Textile](https://textile-lang.com) in my projects because of:\n\n- The smaller size of the javascript library\n- The ease of adding attributes (like `id` and `class` and `data-src`)\n- A more explicit relation between the source formatting convention and the ultimate xhtml representation.\n\nI started out assuming Markdown was the only choice, but I'm coming around to Textile in this environment.",
  "qa_support_q": "Can I get support? Where do I report bugs?",
  "qa_support_a": "I'm **not offering support** at this time. I developed the app for my own use and hope it is of interest to at least a few other people in its current form.\n\nIf you find a *show-stopper* of a bug and really want to tell me about it please get in touch <a href='#on-mastodon'>on mastodon</a>.",
  "qa_languages_q": "What about other languages?",
  "qa_languages_a": "I'm very interested in making the app useful to writers in **non-English languages**, particularly *right-to-left writing systems* and other non-latin based scripts.\n\nI have a weblate instance on codeberg for managing localisations.\n\nIf this is something you'd like to help me work through to extend the utility of the app to new users please get in touch <a href='#on-mastodon'>on mastodon</a>.",
  "qa_drm_q": "What about DRM?",
  "qa_drm_a": "People smarter than I am have worked on this and only managed to create easily breakable protections for digital books.\n\nI have **zero time** for thinking about restricting access to digital media created with this software.\n\nUse this app to make stuff for your **friends and family**.",
  "qa_stack_q": "What is the project stack?",
  "qa_stack_a": "Written in **Typescript** using **Svelte 5** with a vite 6.3 dev environment on node v20.18.\n\nBuilds to a single **SEED.html** file using `vite-plugin-singlefile` to inline scripts, styles and other assets.\n\nIt uses browser APIs:\n\n- `Compression Stream` and `Decompression Stream` for packing/unpacking .epub files\n- `OPFS` and `IndexedDB` for storing file data\n- `blob urls` for making assets available for local preview\n\nThis architecture makes it convenient to embed into a web page, like you can see on [stewarthaines.com/epub](https://stewarthaines.com/epub) which is hosted on github pages, and served via the Cloudflare cache.",
  "qa_process_q": "What was the development process?",
  "qa_process_a": "**All application code and tests** for this version of the app were produced using [Anthropic's Claude Code](https://claude.ai/code) product, mostly with the Sonnet 3.7 and 4 models.\n\nI previously wrote a version using claude with a **VueJS** stack ([v0.3.0 here while it lasts](https://stewarthaines.com/epub/indexeddb/EDITME.html#/)), and before that wrote a VueJS version \"manually\" (check out v0.2.0 [here](https://stewarthaines.com/epub/full/EDITME.html#/)).\n\nThe ideas have been well worked over in this process but I expect this is **not the ultimate form** of a scriptable browser-based EPUB authoring environment.",
  "qa_who_q": "Who made this?",
  "qa_who_a": "My name is **Stewart Haines**. I live in Melbourne/Naarm, Australia.\n\nI'm <span id='on-mastodon'>on Mastodon</span> to support this project as [@editme@mastodon.social](https://mastodon.social/@editme) (SEED.html)"
}